{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","user","usersFromServer","App","useState","selectedUserId","setSelectedUserId","visibleProducts","filter","query","setQuery","lowerQuery","toLocaleLowerCase","includes","selectedCategory","setSelectedCategory","className","href","onClick","classNames","type","placeholder","value","onChange","e","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5add0d4c.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(({ id }) => product.categoryId === id);\n  const user = usersFromServer.find(({ id }) => category.ownerId === id);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nexport const App = () => {\n  // filtering products by UserId\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  let visibleProducts = [...products];\n\n  if (selectedUserId) {\n    visibleProducts = visibleProducts\n      .filter(({ user }) => user.id === selectedUserId);\n  }\n\n  // searching products by its name from input field\n\n  const [query, setQuery] = useState('');\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    visibleProducts = visibleProducts\n      .filter(({ name }) => name.toLocaleLowerCase().includes(lowerQuery));\n  }\n\n  // filtering products by its CategoryId\n\n  const [selectedCategory, setSelectedCategory] = useState(0);\n\n  if (selectedCategory) {\n    visibleProducts = visibleProducts\n      .filter(({ category }) => category.id === selectedCategory);\n  }\n\n  const resetAll = () => {\n    setQuery('');\n    setSelectedCategory(0);\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => setSelectedUserId(0)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(({ name, id }) => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={classNames({\n                    'is-active': id === selectedUserId,\n                  })}\n                  key={id}\n                  onClick={() => setSelectedUserId(id)}\n                >\n                  {name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={e => setQuery(e.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {query && (\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  )}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={classNames(\n                  'button is-success mr-6',\n                  {\n                    'is-outlined': selectedCategory !== 0,\n                  },\n                )}\n                onClick={() => setSelectedCategory(0)}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(({ title, id }) => (\n                <a\n                  data-cy=\"Category\"\n                  className={classNames(\n                    'button mr-2 my-1',\n                    {\n                      'is-info': id === selectedCategory,\n                    },\n                  )}\n                  href=\"#/\"\n                  key={id}\n                  onClick={() => setSelectedCategory(id)}\n                >\n                  {title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={resetAll}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {visibleProducts.length > 0 ? (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visibleProducts.map(({ id, name, category, user }) => (\n                  <tr data-cy=\"Product\" key={id}>\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{name}</td>\n                    <td data-cy=\"ProductCategory\">\n                      {`${category.icon} - ${category.title}`}\n                    </td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={classNames(\n                        'has-text-link',\n                        {\n                          'has-text-danger': user.sex === 'f',\n                        },\n                      )}\n                    >\n                      {user.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}